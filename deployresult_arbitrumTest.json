{
 "contracts": {
  "MockERC20": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xa11ae6BCe16Ca4Df84d5a1E8ffaBE2C25191e35c",
   "abi": [
    "constructor()",
    "event Approval(address indexed owner, address indexed spender, uint256 value)",
    "event Transfer(address indexed from, address indexed to, uint256 value)",
    "function allowance(address, address) view returns (uint256)",
    "function approve(address spender, uint256 value) returns (bool)",
    "function balanceOf(address) view returns (uint256)",
    "function decimals() view returns (uint8)",
    "function mint(address to, uint256 value)",
    "function name() view returns (string)",
    "function symbol() view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function transfer(address to, uint256 value) returns (bool)",
    "function transferFrom(address from, address to, uint256 value) returns (bool)"
   ]
  },
  "MockERC721_V1": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xDE53310e3A01935e318E16327542Ef1E407E389E",
   "abi": [
    "constructor()",
    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
    "function approve(address to, uint256 tokenId)",
    "function balanceOf(address owner) view returns (uint256)",
    "function burn(uint256 tokenId)",
    "function getApproved(uint256 tokenId) view returns (address)",
    "function isApprovedForAll(address owner, address operator) view returns (bool)",
    "function mint(address to) returns (uint256 tokenId)",
    "function name() view returns (string)",
    "function ownerOf(uint256 tokenId) view returns (address)",
    "function safeTransferFrom(address from, address to, uint256 tokenId)",
    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function symbol() view returns (string)",
    "function tokenURI(uint256 tokenId) view returns (string)",
    "function transferFrom(address from, address to, uint256 tokenId)"
   ]
  },
  "MockERC1155_V1": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x49018AF7F8C20212e29716b413a22eD3A5bf4D9e",
   "abi": [
    "constructor()",
    "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
    "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
    "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
    "event URI(string value, uint256 indexed id)",
    "function balanceOf(address account, uint256 id) view returns (uint256)",
    "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
    "function burn(address from, uint256 id, uint256 amount)",
    "function burnBatch(address from, uint256[] ids, uint256[] amounts)",
    "function isApprovedForAll(address account, address operator) view returns (bool)",
    "function mint(address to, uint256 id, uint256 amount, bytes data)",
    "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
    "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
    "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function uri(uint256) view returns (string)"
   ]
  },
  "MockTPO": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xF221BdB451917F1B49b118397F2A503514521bAD",
   "abi": [
    "function getERC20TokenUSDPrice(address tokenAddr) pure returns (uint256)"
   ]
  },
  "MysteryBox1155": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x1B4B38b10638648A53C3b520dfDD85faC30dba43",
   "abi": [
    "constructor(string uri)",
    "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
    "event Extendable1155Modify(uint256 indexed id, bytes extendData)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
    "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
    "event URI(string value, uint256 indexed id)",
    "event Unpaused(address account)",
    "function DATA_ROLE() view returns (bytes32)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _royalties() view returns (uint256)",
    "function balanceOf(address account, uint256 id) view returns (uint256)",
    "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
    "function burn(address account, uint256 id, uint256 value)",
    "function burnBatch(address account, uint256[] ids, uint256[] values)",
    "function exists(uint256 id) view returns (bool)",
    "function fetchIncome(address erc20)",
    "function fetchIncomeEth()",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function getTokenExtendNftData(uint256 id) view returns (bytes)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function isApprovedForAll(address account, address operator) view returns (bool)",
    "function mint(address to, uint256 id, uint256 amount, bytes data)",
    "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
    "function modifyExtendData(uint256 id, bytes extendData)",
    "function name() view returns (string)",
    "function pause()",
    "function paused() view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
    "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
    "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function setRoyalties(uint256 royalties)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function totalSupply(uint256 id) view returns (uint256)",
    "function unpause()",
    "function updateURI(string newuri)",
    "function uri(uint256) view returns (string)"
   ]
  },
  "MysteryBoxShop": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x146C83b4985E7e7a7f8cc1c5B6edB06CcC30F649",
   "abi": [
    "constructor()",
    "event BatchBuyMysteryBox(address indexed userAddr, string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData, uint256 count)",
    "event BuyMysteryBox(address indexed userAddr, string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "event Paused(address account)",
    "event PerAddrBuyCountChange(string indexed pairName, address indexed userAddr, uint32 count)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event SetOnSaleMBCheckCondition(string indexed pairName, uint256 price, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit)",
    "event SetOnSaleMBCountleft(string indexed pairName, uint256 countLeft)",
    "event SetOnSaleMysterBox(string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "event Unpaused(address account)",
    "event UnsetOnSaleMysterBox(string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function OPERATER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _onSaleMysterBoxDatas(string) view returns (uint64 nextRenewTime, uint256 countLeft)",
    "function _onSaleMysterBoxes(string) view returns (address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit)",
    "function _perAddrBuyCount(string, address) view returns (uint32)",
    "function _receiveIncomAddress() view returns (address)",
    "function _whitelists(uint32, address) view returns (bool)",
    "function addWitheList(uint32 wlId, address[] whitelist)",
    "function batchBuyMysterBox(string pairName, uint32 count) payable",
    "function buyMysteryBox(string pairName) payable",
    "function fetchIncome(address tokenAddr, uint256 value)",
    "function fetchIncome1155(address tokenAddr, uint256 tokenId, uint256 value)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function pause()",
    "function paused() view returns (bool)",
    "function removeWhiteList(uint32 wlId, address[] whitelist)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setOnSaleMBCheckCondition(string pairName, uint256 price, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit)",
    "function setOnSaleMBCountleft(string pairName, uint256 countLeft)",
    "function setOnSaleMysteryBox(string pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "function setReceiveIncomeAddress(address incomAddr)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()",
    "function unsetOnSaleMysteryBox(string pairName)"
   ]
  },
  "MTT": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x685a4Af97b3F39822504B16814004316f216F577",
   "abi": [
    "constructor()",
    "event Approval(address indexed owner, address indexed spender, uint256 value)",
    "event Transfer(address indexed from, address indexed to, uint256 value)",
    "function allowance(address owner, address spender) view returns (uint256)",
    "function approve(address spender, uint256 amount) returns (bool)",
    "function balanceOf(address account) view returns (uint256)",
    "function burn(uint256 amount)",
    "function burnFrom(address account, uint256 amount)",
    "function decimals() view returns (uint8)",
    "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
    "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
    "function name() view returns (string)",
    "function symbol() view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function transfer(address to, uint256 amount) returns (bool)",
    "function transferFrom(address from, address to, uint256 amount) returns (bool)"
   ]
  },
  "MysteryBoxShopV1": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xfDaE5004954d3e2D44389F088d5e0351970d7f67",
   "abi": [
    "constructor()",
    "event BatchBuyMysteryBox(address indexed userAddr, string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData, uint256 count)",
    "event BuyMysteryBox(address indexed userAddr, string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "event Paused(address account)",
    "event PerAddrBuyCountChange(string indexed pairName, address indexed userAddr, uint32 count)",
    "event PerAddrDiscountCountChange(uint32 discountId, address indexed userAddr, uint32 count)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event SetOnSaleMBCheckCondition(string indexed pairName, uint256 price, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId)",
    "event SetOnSaleMBCountleft(string indexed pairName, uint256 countLeft)",
    "event SetOnSaleMysterBox(string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "event Unpaused(address account)",
    "event UnsetOnSaleMysterBox(string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function OPERATER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _discountAddress(uint32, address) view returns (uint16 discount, uint32 maxCount)",
    "function _discountBuyCount(uint32, address) view returns (uint32)",
    "function _onSaleMysterBoxDatas(string) view returns (uint64 nextRenewTime, uint256 countLeft)",
    "function _onSaleMysterBoxes(string) view returns (address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId)",
    "function _perAddrBuyCount(string, address) view returns (uint32)",
    "function _receiveIncomAddress() view returns (address)",
    "function _whitelists(uint32, address) view returns (bool)",
    "function addDiscountAddress(uint32 daId, tuple(uint16 discount, uint32 maxCount, address addr)[] discountAddrList)",
    "function addWitheList(uint32 wlId, address[] whitelist)",
    "function batchBuyMysterBox(string pairName, uint32 count) payable",
    "function buyMysteryBox(string pairName) payable",
    "function fetchIncome(address tokenAddr, uint256 value)",
    "function fetchIncome1155(address tokenAddr, uint256 tokenId, uint256 value)",
    "function getDiscountCountBuyCount(uint32 daId, address addr) view returns (uint32)",
    "function getDiscountInfo(uint32 daId, address addr) view returns (uint16 discount, uint32 maxCount)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function isDiscountAddress(uint32 daId, address addr) view returns (bool)",
    "function pause()",
    "function paused() view returns (bool)",
    "function removeDiscountAddress(uint32 daId, address[] discountAddrList)",
    "function removeWhiteList(uint32 wlId, address[] whitelist)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setOnSaleMBCheckCondition(string pairName, uint256 price, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId)",
    "function setOnSaleMBCountleft(string pairName, uint256 countLeft)",
    "function setOnSaleMysteryBox(string pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "function setReceiveIncomeAddress(address incomAddr)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()",
    "function unsetOnSaleMysteryBox(string pairName)"
   ]
  },
  "MysteryBoxShopV2": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x27B51d74c78d5ee05d58b4Ba321B42687F5C4809",
   "abi": [
    "constructor()",
    "event BatchBuyMysteryBox(address indexed userAddr, string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData, uint256 count)",
    "event BuyMysteryBox(address indexed userAddr, string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "event Paused(address account)",
    "event PerAddrBuyCountChange(string indexed pairName, address indexed userAddr, uint32 count)",
    "event PerAddrDiscountCountChange(uint32 discountId, address indexed userAddr, uint32 count)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event SetOnSaleMBCheckCondition(string indexed pairName, uint256 price, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId)",
    "event SetOnSaleMBCountleft(string indexed pairName, uint256 countLeft)",
    "event SetOnSaleMysterBox(string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "event Unpaused(address account)",
    "event UnsetOnSaleMysterBox(string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function OPERATER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _discountAddress(uint32, address) view returns (uint16 discount, uint32 maxCount)",
    "function _discountBuyCount(uint32, address) view returns (uint32)",
    "function _onSaleMysterBoxDatas(string) view returns (uint64 nextRenewTime, uint256 countLeft)",
    "function _onSaleMysterBoxes(string) view returns (address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId)",
    "function _perAddrBuyCount(string, address) view returns (uint32)",
    "function _receiveIncomAddress() view returns (address)",
    "function _whitelists(uint32, address) view returns (bool)",
    "function addDiscountAddress(uint32 daId, tuple(uint16 discount, uint32 maxCount, address addr)[] discountAddrList)",
    "function addWitheList(uint32 wlId, address[] whitelist)",
    "function batchBuyMysterBox(string pairName, uint32 count) payable",
    "function buyMysteryBox(string pairName) payable",
    "function fetchIncome(address tokenAddr, uint256 value)",
    "function fetchIncome1155(address tokenAddr, uint256 tokenId, uint256 value)",
    "function getDiscountCountBuyCount(uint32 daId, address addr) view returns (uint32)",
    "function getDiscountInfo(uint32 daId, address addr) view returns (uint16 discount, uint32 maxCount)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function isDiscountAddress(uint32 daId, address addr) view returns (bool)",
    "function pause()",
    "function paused() view returns (bool)",
    "function removeDiscountAddress(uint32 daId, address[] discountAddrList)",
    "function removeWhiteList(uint32 wlId, address[] whitelist)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setOnSaleMBCheckCondition(string pairName, uint256 price, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId)",
    "function setOnSaleMBCountleft(string pairName, uint256 countLeft)",
    "function setOnSaleMysteryBox(string pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit, uint32 discountId) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "function setReceiveIncomeAddress(address incomAddr)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()",
    "function unsetOnSaleMysteryBox(string pairName)"
   ]
  },
  "RandomPoolLib": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x8C84f75508cebf49E5845Ff4FB660263CeE34D4C",
   "abi": [
    "function randBetween(uint256 min, uint256 max, uint256 r) pure returns (uint256 ret)"
   ]
  },
  "Random": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xFD6fF73b00EC94599dF9708832D33907eE7Bc486",
   "abi": [
    "constructor()",
    "event OracleRandRequest(uint256 reqid, address indexed requestAddress)",
    "event OracleRandResponse(uint256 reqid, uint256 randnum, address indexed requestAddress)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function ORACLE_ROLE() view returns (bytes32)",
    "function fulfillOracleRand(uint256 reqid, uint256 randnum) returns (uint256 rand)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function isSealed(address addr) view returns (bool)",
    "function nextRand(uint32 index, uint256 randomNum) view returns (uint256 ret)",
    "function oracleRand() returns (uint256)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function sealedRand() returns (uint256 ret)",
    "function seedRand(uint256 inputSeed) returns (uint256 ret)",
    "function setRandomSeed(uint256 s)",
    "function setSealed()",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)"
   ]
  },
  "HeroNFT": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x7618F53378Eb56c49b3259C798Fc2bA8C56CC7ee",
   "abi": [
    "constructor(uint256 idStart, string name, string symbol, string baseTokenURI)",
    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
    "event HeroNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data)",
    "event HeroNFTModified(uint256 indexed tokenId, uint256 writeableData)",
    "event NFTExtendModify(uint256 indexed tokenId, string extendName, bytes extendData)",
    "event NFTExtendName(string extendName, bytes32 nameBytes)",
    "event NFTFreeze(uint256 indexed tokenId, int32 freezeRef)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
    "event Unpaused(address account)",
    "function DATA_ROLE() view returns (bytes32)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function FREEZE_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _attrSource() view returns (address)",
    "function _codec() view returns (address)",
    "function _royalties() view returns (uint256)",
    "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
    "function approve(address to, uint256 tokenId)",
    "function balanceOf(address owner) view returns (uint256)",
    "function burn(uint256 tokenId)",
    "function exists(uint256 tokenId) view returns (bool)",
    "function extendNftData(string extendName)",
    "function fetchIncome(address erc20)",
    "function fetchIncomeEth()",
    "function freeze(uint256 tokenId)",
    "function getApproved(uint256 tokenId) view returns (address)",
    "function getAttrSource() view returns (address a)",
    "function getCodec() view returns (address c)",
    "function getNftData(uint256 tokenId) view returns (tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function isApprovedForAll(address owner, address operator) view returns (bool)",
    "function isFreezed(uint256 tokenId) view returns (bool)",
    "function mint(address to, tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data) returns (uint256)",
    "function mintFixedID(uint256 id, address to, tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data) returns (uint256)",
    "function modNftData(uint256 tokenId, uint256 writeableData)",
    "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
    "function name() view returns (string)",
    "function notFreezed(uint256 tokenId) view returns (bool)",
    "function ownerOf(uint256 tokenId) view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
    "function safeTransferFrom(address from, address to, uint256 tokenId)",
    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function setAttrSource(address a)",
    "function setCodec(address c)",
    "function setRoyalties(uint256 royalties)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function tokenByIndex(uint256 index) view returns (uint256)",
    "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
    "function tokenURI(uint256 tokenId) view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function transferFrom(address from, address to, uint256 tokenId)",
    "function unfreeze(uint256 tokenId)",
    "function unpause()",
    "function updateURI(string baseTokenURI)"
   ]
  },
  "HeroNFTCodec_V1": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x7A317c6fc7Ae7ccE0f8C3fd502B8DB413ADB0958",
   "abi": [
    "function fromHeroNftFixedAnWriteableData(tuple(uint8 job, uint8 grade, uint32 minerAttr, uint32 battleAttr) fdata, tuple(uint8 starLevel, uint16 level) wdata) pure returns (tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) basedata)",
    "function fromHeroNftFixedData(tuple(uint8 job, uint8 grade, uint32 minerAttr, uint32 battleAttr) data) pure returns (tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) basedata)",
    "function fromHeroPetNftFixedAnWriteableData(tuple(uint8 petId, uint8 avatar_slot_1_2, uint8 avatar_slot_3_4, uint8 avatar_slot_5_6, uint32 minerAttr, uint32 battleAttr) fdata, tuple(uint16 level) wdata) pure returns (tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) basedata)",
    "function fromHeroPetNftFixedData(tuple(uint8 petId, uint8 avatar_slot_1_2, uint8 avatar_slot_3_4, uint8 avatar_slot_5_6, uint32 minerAttr, uint32 battleAttr) data) pure returns (tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) basedata)",
    "function getCharacterId(tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data) pure returns (uint16 characterId)",
    "function getHeroNftFixedData(tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data) pure returns (tuple(uint8 job, uint8 grade, uint32 minerAttr, uint32 battleAttr) hndata)",
    "function getHeroNftWriteableData(tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data) pure returns (tuple(uint8 starLevel, uint16 level) hndata)",
    "function getHeroPetNftFixedData(tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data) pure returns (tuple(uint8 petId, uint8 avatar_slot_1_2, uint8 avatar_slot_3_4, uint8 avatar_slot_5_6, uint32 minerAttr, uint32 battleAttr) hndata)",
    "function getHeroPetNftWriteableData(tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data) pure returns (tuple(uint16 level) hndata)",
    "function toHeroNftWriteableData(tuple(uint8 starLevel, uint16 level) hndata) pure returns (uint256 wdata)",
    "function toHeroPetNftWriteableData(tuple(uint16 level) hndata) pure returns (uint256 wdata)"
   ]
  },
  "NFTAttrSource_V1": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xB06707441e023f8FCB6E614c324060c4F9B91f52",
   "abi": [
    "constructor()",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function _heroBattleAttrs(uint32) view returns (uint16 attackPer, uint16 defensePer, uint16 hitpointPer, uint16 missPer, uint16 dogePer, uint16 criticalPer, uint16 decriticalPer, uint16 speedPer)",
    "function _heroMineAttrs(uint32) view returns (uint8 minerJob, uint8 minerRate, uint8 sailerSpeedPer, uint8 sailerLoadPer, uint8 sailerRangePer, uint32 hashRate)",
    "function _shipBattleAttrs(uint32) view returns (uint16 attackPer)",
    "function _shipMineAttrs(uint32) view returns (uint32 hashRate, uint8 maxSailer)",
    "function getHeroBattleAttr(uint32 battleAttr, uint16 level) view returns (tuple(uint16 attackPer, uint16 defensePer, uint16 hitpointPer, uint16 missPer, uint16 dogePer, uint16 criticalPer, uint16 decriticalPer, uint16 speedPer) data)",
    "function getHeroMinerAttr(uint32 mineAttr, uint16 starLevel) view returns (tuple(uint8 minerJob, uint8 minerRate, uint8 sailerSpeedPer, uint8 sailerLoadPer, uint8 sailerRangePer, uint32 hashRate) data)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function getShipBattleAttr(uint32 battleAttr, uint16 level) view returns (tuple(uint16 attackPer) data)",
    "function getShipMinerAttr(uint32 mineAttr, uint16 level) view returns (tuple(uint32 hashRate, uint8 maxSailer) data)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setHeroBattleAttr(uint32[] battleAttrs, tuple(uint16 attackPer, uint16 defensePer, uint16 hitpointPer, uint16 missPer, uint16 dogePer, uint16 criticalPer, uint16 decriticalPer, uint16 speedPer)[] datas)",
    "function setHeroMinerAttr(uint32[] mineAttrs, tuple(uint8 minerJob, uint8 minerRate, uint8 sailerSpeedPer, uint8 sailerLoadPer, uint8 sailerRangePer, uint32 hashRate)[] datas)",
    "function setShipBattleAttr(uint32[] battleAttrs, tuple(uint16 attackPer)[] datas)",
    "function setShipMinerAttr(uint32[] mineAttrs, tuple(uint32 hashRate, uint8 maxSailer)[] datas)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)"
   ]
  },
  "HeroNFTMysteryBox": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x2c6ef034909C75c84B288d76C3A0f2Ba8AC7E848",
   "abi": [
    "event BatchOpenMysteryBox(address indexed owner, uint256 indexed mbTokenId, tuple(address addr, uint256[] tokenIds, uint256[] tokenValues)[] sfts, tuple(address addr, uint256[] tokenIds)[] nfts)",
    "event BatchOracleOpenMysteryBox(uint256 oracleRequestId, uint256 indexed mbTokenId, address indexed owner, uint8 batchCount)",
    "event OpenMysteryBox(address indexed owner, uint256 indexed mbTokenId, tuple(address addr, uint256[] tokenIds, uint256[] tokenValues)[] sfts, tuple(address addr, uint256[] tokenIds)[] nfts)",
    "event OracleOpenMysteryBox(uint256 oracleRequestId, uint256 indexed mbTokenId, address indexed owner)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event Unpaused(address account)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function RAND_ROLE() view returns (bytes32)",
    "function _mb1155() view returns (address)",
    "function _oracleUserData(uint256) view returns (address owner, uint32 randomType, uint32 mysteryType, uint8 count, uint256 tokenId)",
    "function batchOracleOpenMysteryBox(uint256 tokenId, uint8 batchCount) payable",
    "function getName() returns (string)",
    "function getNftAddress() view returns (address)",
    "function getRandomSource(uint32 randomType) view returns (address)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function oracleOpenMysteryBox(uint256 tokenId) payable",
    "function oracleRandResponse(uint256 reqid, uint256 randnum)",
    "function pause()",
    "function paused() view returns (bool)",
    "function removeMethodExtraFee(uint8 methodKey)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setMethodExtraFee(uint8 methodKey, uint256 value, address target)",
    "function setNftAddress(address nftAddr)",
    "function setRandomSource(uint32 randomType, address randomSrc)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()"
   ]
  },
  "HeroNFTMysteryBoxRandSource": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x454003A3c3480764d9247A0E7FeD47EF175608b8",
   "abi": [
    "constructor(address heroNftAddr)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function RANDOM_ROLE() view returns (bytes32)",
    "function _heroNFTContract() view returns (address)",
    "function addPool(uint32 poolID, tuple(uint32 rate, uint256 rangMin, uint256 rangMax)[] randSetArray)",
    "function batchRandomAndMint(uint256 r, uint32 mysteryTp, address to, uint8 batchCount) returns (tuple(address addr, uint256[] tokenIds, uint256[] tokenValues)[] sfts, tuple(address addr, uint256[] tokenIds)[] nfts)",
    "function getPool(uint32 poolID) view returns (tuple(bool exist, tuple(uint32 totalRate, tuple(uint32 rate, uint256 rangMin, uint256 rangMax)[] pool) randPool))",
    "function getRandSource() view returns (address)",
    "function getRandomSet(uint32 mysteryTp) view returns (uint32[] poolIds)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasPool(uint32 poolID) view returns (bool)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function modifyPool(uint32 poolID, tuple(uint32 rate, uint256 rangMin, uint256 rangMax)[] randSetArray)",
    "function randomAndMint(uint256 r, uint32 mysteryTp, address to) returns (tuple(address addr, uint256[] tokenIds, uint256[] tokenValues)[] sfts, tuple(address addr, uint256[] tokenIds)[] nfts)",
    "function removePool(uint32 poolID)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setRandSource(address randAddr)",
    "function setRandomSet(uint32 mbTypeID, uint32[] poolIds)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unsetRandomSet(uint32 mysteryTp)"
   ]
  },
  "HeroPetNFTMysteryBoxRandSource": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xA37A7b5b041a7f124019fF6FCDFeb5AF3B31E413",
   "abi": [
    "constructor(address heroNftAddr)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function RANDOM_ROLE() view returns (bytes32)",
    "function _heroNFTContract() view returns (address)",
    "function addPool(uint32 poolID, tuple(uint32 rate, uint256 rangMin, uint256 rangMax)[] randSetArray)",
    "function batchRandomAndMint(uint256 r, uint32 mysteryTp, address to, uint8 batchCount) returns (tuple(address addr, uint256[] tokenIds, uint256[] tokenValues)[] sfts, tuple(address addr, uint256[] tokenIds)[] nfts)",
    "function getPool(uint32 poolID) view returns (tuple(bool exist, tuple(uint32 totalRate, tuple(uint32 rate, uint256 rangMin, uint256 rangMax)[] pool) randPool))",
    "function getRandSource() view returns (address)",
    "function getRandomSet(uint32 mysteryTp) view returns (uint32[] poolIds)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasPool(uint32 poolID) view returns (bool)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function modifyPool(uint32 poolID, tuple(uint32 rate, uint256 rangMin, uint256 rangMax)[] randSetArray)",
    "function randomAndMint(uint256 r, uint32 mysteryTp, address to) returns (tuple(address addr, uint256[] tokenIds, uint256[] tokenValues)[] sfts, tuple(address addr, uint256[] tokenIds)[] nfts)",
    "function removePool(uint32 poolID)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setRandSource(address randAddr)",
    "function setRandomSet(uint32 mbTypeID, uint32[] poolIds)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unsetRandomSet(uint32 mysteryTp)"
   ]
  },
  "ShipNFT": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xf486814943482ab2022eb9d4A9d7C1a94bCAD7c1",
   "abi": [
    "constructor(uint256 idStart, string name, string symbol, string baseTokenURI)",
    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
    "event NFTExtendModify(uint256 indexed tokenId, string extendName, bytes extendData)",
    "event NFTExtendName(string extendName, bytes32 nameBytes)",
    "event NFTFreeze(uint256 indexed tokenId, int32 freezeRef)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event ShipNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint8 shipType, uint16 shipTypeID, uint8 grade, uint32 minerAttr, uint32 battleAttr, uint16 level) data)",
    "event ShipNFTModified(uint256 indexed tokenId, tuple(uint8 shipType, uint16 shipTypeID, uint8 grade, uint32 minerAttr, uint32 battleAttr, uint16 level) data)",
    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
    "event Unpaused(address account)",
    "function DATA_ROLE() view returns (bytes32)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function FREEZE_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _attrSource() view returns (address)",
    "function _royalties() view returns (uint256)",
    "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
    "function approve(address to, uint256 tokenId)",
    "function balanceOf(address owner) view returns (uint256)",
    "function burn(uint256 tokenId)",
    "function exists(uint256 tokenId) view returns (bool)",
    "function extendNftData(string extendName)",
    "function fetchIncome(address erc20)",
    "function fetchIncomeEth()",
    "function freeze(uint256 tokenId)",
    "function getApproved(uint256 tokenId) view returns (address)",
    "function getAttrSource() view returns (address a)",
    "function getNftData(uint256 tokenId) view returns (tuple(uint8 shipType, uint16 shipTypeID, uint8 grade, uint32 minerAttr, uint32 battleAttr, uint16 level) data)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function isApprovedForAll(address owner, address operator) view returns (bool)",
    "function isFreezed(uint256 tokenId) view returns (bool)",
    "function mint(address to, tuple(uint8 shipType, uint16 shipTypeID, uint8 grade, uint32 minerAttr, uint32 battleAttr, uint16 level) data) returns (uint256)",
    "function mintFixedID(uint256 id, address to, tuple(uint8 shipType, uint16 shipTypeID, uint8 grade, uint32 minerAttr, uint32 battleAttr, uint16 level) data) returns (uint256)",
    "function modNftData(uint256 tokenId, tuple(uint8 shipType, uint16 shipTypeID, uint8 grade, uint32 minerAttr, uint32 battleAttr, uint16 level) data)",
    "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
    "function name() view returns (string)",
    "function notFreezed(uint256 tokenId) view returns (bool)",
    "function ownerOf(uint256 tokenId) view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
    "function safeTransferFrom(address from, address to, uint256 tokenId)",
    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function setAttrSource(address a)",
    "function setRoyalties(uint256 royalties)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function tokenByIndex(uint256 index) view returns (uint256)",
    "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
    "function tokenURI(uint256 tokenId) view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function transferFrom(address from, address to, uint256 tokenId)",
    "function unfreeze(uint256 tokenId)",
    "function unpause()",
    "function updateURI(string baseTokenURI)"
   ]
  },
  "WarrantNFT": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xBE68d6eb155c6d5155B572d6B1Ea88b017146097",
   "abi": [
    "constructor(uint256 idStart, string name, string symbol, string baseTokenURI)",
    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
    "event NFTExtendModify(uint256 indexed tokenId, string extendName, bytes extendData)",
    "event NFTExtendName(string extendName, bytes32 nameBytes)",
    "event NFTFreeze(uint256 indexed tokenId, int32 freezeRef)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
    "event Unpaused(address account)",
    "event WarrantNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint32 createTm, uint16 portID, uint16 storehouseLv, uint16 factoryLv, uint16 shopLv, uint16 shipyardLv) data)",
    "event WarrantNFTModified(uint256 indexed tokenId, tuple(uint32 createTm, uint16 portID, uint16 storehouseLv, uint16 factoryLv, uint16 shopLv, uint16 shipyardLv) data)",
    "function DATA_ROLE() view returns (bytes32)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function FREEZE_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _royalties() view returns (uint256)",
    "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
    "function approve(address to, uint256 tokenId)",
    "function balanceOf(address owner) view returns (uint256)",
    "function burn(uint256 tokenId)",
    "function exists(uint256 tokenId) view returns (bool)",
    "function extendNftData(string extendName)",
    "function fetchIncome(address erc20)",
    "function fetchIncomeEth()",
    "function freeze(uint256 tokenId)",
    "function getApproved(uint256 tokenId) view returns (address)",
    "function getNftData(uint256 tokenId) view returns (tuple(uint32 createTm, uint16 portID, uint16 storehouseLv, uint16 factoryLv, uint16 shopLv, uint16 shipyardLv) data)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function isApprovedForAll(address owner, address operator) view returns (bool)",
    "function isFreezed(uint256 tokenId) view returns (bool)",
    "function mint(address to, tuple(uint32 createTm, uint16 portID, uint16 storehouseLv, uint16 factoryLv, uint16 shopLv, uint16 shipyardLv) data) returns (uint256)",
    "function mintFixedID(uint256 id, address to, tuple(uint32 createTm, uint16 portID, uint16 storehouseLv, uint16 factoryLv, uint16 shopLv, uint16 shipyardLv) data) returns (uint256)",
    "function modNftData(uint256 tokenId, tuple(uint32 createTm, uint16 portID, uint16 storehouseLv, uint16 factoryLv, uint16 shopLv, uint16 shipyardLv) data)",
    "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
    "function name() view returns (string)",
    "function notFreezed(uint256 tokenId) view returns (bool)",
    "function ownerOf(uint256 tokenId) view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
    "function safeTransferFrom(address from, address to, uint256 tokenId)",
    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function setRoyalties(uint256 royalties)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function tokenByIndex(uint256 index) view returns (uint256)",
    "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
    "function tokenURI(uint256 tokenId) view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function transferFrom(address from, address to, uint256 tokenId)",
    "function unfreeze(uint256 tokenId)",
    "function unpause()",
    "function updateURI(string baseTokenURI)"
   ]
  },
  "DirectMysteryBox": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xC0d3f28b386dC8570225659D892Cf20621f65f01",
   "abi": [
    "constructor()",
    "event DirectMBBatchGetResult(address indexed useAddr, uint32 indexed directMBID, tuple(address addr, uint256[] tokenIds, uint256[] tokenValues)[] sfts, tuple(address addr, uint256[] tokenIds)[] nfts)",
    "event DirectMBBatchOpen(address indexed useAddr, uint32 indexed directMBID, uint256 batchCount)",
    "event DirectMBGetResult(address indexed useAddr, uint32 indexed directMBID, tuple(address addr, uint256[] tokenIds, uint256[] tokenValues)[] sfts, tuple(address addr, uint256[] tokenIds)[] nfts)",
    "event DirectMBOpen(address indexed useAddr, uint32 indexed directMBID)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event SetOnSaleDirectMB(uint32 indexed directMBID, tuple(address randsource, uint32 mysteryType, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "event Unpaused(address account)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function RAND_ROLE() view returns (bytes32)",
    "function _onsaleMB(uint32) view returns (address randsource, uint32 mysteryType, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount)",
    "function _onsaleMBDatas(uint32) view returns (uint64 nextRenewTime, uint256 countLeft)",
    "function _openedRecord(uint256) view returns (address userAddr, uint32 directMBID, uint8 batchCount)",
    "function _receiveIncomAddress() view returns (address)",
    "function batchOpenMB(uint32 directMBID, uint8 batchCount) payable",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function openMB(uint32 directMBID) payable",
    "function oracleRandResponse(uint256 reqid, uint256 randnum)",
    "function pause()",
    "function paused() view returns (bool)",
    "function removeMethodExtraFee(uint8 methodKey)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setMethodExtraFee(uint8 methodKey, uint256 value, address target)",
    "function setOnSaleDirectMB(uint32 directMBID, tuple(address randsource, uint32 mysteryType, address tokenAddr, uint256 tokenId, uint256 price, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "function setReceiveIncomeAddress(address incomAddr)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()"
   ]
  },
  "MTTGold": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x92eA44430D79b029769dCF08a52A0A92C9448720",
   "abi": [
    "constructor()",
    "event Approval(address indexed owner, address indexed spender, uint256 value)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event Transfer(address indexed from, address indexed to, uint256 value)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function allowance(address owner, address spender) view returns (uint256)",
    "function approve(address spender, uint256 amount) returns (bool)",
    "function balanceOf(address account) view returns (uint256)",
    "function burn(uint256 amount)",
    "function burnFrom(address account, uint256 amount)",
    "function decimals() view returns (uint8)",
    "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
    "function mint(address toAddr, uint256 value)",
    "function name() view returns (string)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function transfer(address to, uint256 amount) returns (bool)",
    "function transferFrom(address from, address to, uint256 amount) returns (bool)"
   ]
  },
  "GameService": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xEbC3Ca267e300dCBBF3076d162f72910bd188204",
   "abi": [
    "constructor()",
    "event BindHeroNFTUsage(address indexed userAddr, uint256 indexed heroNFTID, string usage)",
    "event BindShipNFT(address indexed userAddr, uint256 indexed shipNFTID)",
    "event BindWarrant(address indexed userAddr, uint256 indexed warrantNFTID)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event UnbindHeroNFTUsage(address indexed userAddr, uint256 indexed heroNFTID, string usage)",
    "event UnbindShipNFT(address indexed userAddr, uint256 indexed shipNFTID)",
    "event UnbindWarrant(address indexed userAddr, uint256 indexed warrantNFTID)",
    "event Unpaused(address account)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function SERVICE_ROLE() view returns (bytes32)",
    "function _MTTAddr() view returns (address)",
    "function _MTTGoldAddr() view returns (address)",
    "function _bindWarrant(address, uint32) view returns (uint256)",
    "function _heroNFTAddr() view returns (address)",
    "function _heroNFTUsage(uint256) view returns (bytes32)",
    "function _shipNFTAddr() view returns (address)",
    "function _shipNFTBind(uint256) view returns (bool)",
    "function _warrantNFTAddr() view returns (address)",
    "function bindHeroNFTUsage(uint256 heroNFTID, string usage)",
    "function bindShipNFT(uint256 shipNFTID)",
    "function bindWarrant(uint256 warrantNFTID)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function init(address heroNFTAddr, address shipNFTAddr, address warrantNFTAddr, address MTTAddr, address MTTGoldAddr)",
    "function pause()",
    "function paused() view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unbindHeroNFTUsage(uint256 heroNFTID, string usage, address userAddr)",
    "function unbindShipNFT(uint256 shipNFTID, address userAddr)",
    "function unbindWarrant(uint256 warrantNFTID, address userAddr)",
    "function unpause()"
   ]
  },
  "OffOnChainBridge": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x36882D1aa96EE5003F7408B0AD7742936B67Eb27",
   "abi": [
    "constructor()",
    "event Off2OnChain_MTTGold(address userAddr, uint256 goldValue)",
    "event On2OffChain_MTTGold(address userAddr, uint256 goldValue)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event Unpaused(address account)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function SERVICE_ROLE() view returns (bytes32)",
    "function _MTTAddr() view returns (address)",
    "function _MTTGoldAddr() view returns (address)",
    "function _lastWarrantGenGoldTm(uint256) view returns (uint32)",
    "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
    "function _shopGoldMaxGen(uint16, uint16) view returns (uint256)",
    "function _warrantNFTAddr() view returns (address)",
    "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function init(address warrantNFTAddr, address MTTAddr, address MTTGoldAddr)",
    "function mint_MTTGold(address userAddr, uint256 goldValue, uint256 warrantNFTID)",
    "function off2onChain_MTTGold(address userAddr, uint256 goldValue)",
    "function on2offChain_MTTGold(uint256 goldValue)",
    "function pause()",
    "function paused() view returns (bool)",
    "function removeChargeToken(string tokenName)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setReceiveIncomeAddr(address incomeAddr)",
    "function setShopGoldMaxGen(uint16 portID, uint16 shopLv, uint256 maxGoldGenPerSec)",
    "function setTPOracleAddr(address tpOracleAddr)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()"
   ]
  },
  "WarrantIssuer": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xc3cc9cd36c2e2E4775db37E4779ed399fEFDB726",
   "abi": [
    "constructor()",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event Unpaused(address account)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
    "function _warrantNFTAddr() view returns (address)",
    "function _warrantPrices(uint16) view returns (uint256)",
    "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
    "function clearWarrantUpgradePrice(uint16 portID, uint8 upgradeType, uint16 level)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function init(address warrantNFTAddr)",
    "function mint_MTTWarrant(uint16 portID, uint256 usdPrice, string tokenName) payable",
    "function pause()",
    "function paused() view returns (bool)",
    "function removeChargeToken(string tokenName)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setReceiveIncomeAddr(address incomeAddr)",
    "function setTPOracleAddr(address tpOracleAddr)",
    "function setWarrantPrice(uint16 portID, uint256 usdPrice)",
    "function setWarrantUpgradePrice(uint16 portID, uint8 upgradeType, uint16 level, uint256 usdPrice)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()",
    "function upgrade_MTTWarrant(uint256 warrantNFTID, uint8 upgradeType, uint256 usdPrice, string tokenName) payable"
   ]
  },
  "Shipyard": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xC67fAfe1f3AdDc2784Fd1Eb8d1F012b1630b812c",
   "abi": [
    "constructor()",
    "event FinishUpgrade_Ship(address indexed userAddr, uint256 indexed shipNFTID, uint16 newLevel)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event StartUpgrade_Ship(address indexed userAddr, uint256 indexed shipNFTID, uint256 indexed warrantNFTID, uint16 nextLevel, uint32 finishTime)",
    "event Unpaused(address account)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function SERVICE_ROLE() view returns (bytes32)",
    "function _buildabelShips(uint16, uint16, uint256) view returns (uint24)",
    "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
    "function _shipNFTAddr() view returns (address)",
    "function _shipUpgradeConfs(uint24, uint16) view returns (uint256 usdPrice, uint32 timeCost, uint16 portIDRequire, uint16 shipyardLvRequire)",
    "function _upgradingShips(uint256) view returns (uint16 nextLevel, uint32 finishTime)",
    "function _warrantNFTAddr() view returns (address)",
    "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
    "function clearBuildableShips(uint16 portID, uint8 shipyardLv)",
    "function clearUpgradeConf(uint8 shipType, uint16 shipTypeID, uint16 shipLevel)",
    "function finishUpgrade_Ship(uint256 shipNFTID)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function init(address warrantNFTAddr, address shipNFTAddr)",
    "function mint_Ship(address userAddr, uint8 shipType, uint16 shipTypeID, uint8 grade, uint32 minerAttr, uint32 battleAttr, uint256 warrantNFTID)",
    "function pause()",
    "function paused() view returns (bool)",
    "function removeChargeToken(string tokenName)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setBuildableShips(uint16 portID, uint8 shipyardLv, uint24[] buildableShipArray)",
    "function setReceiveIncomeAddr(address incomeAddr)",
    "function setTPOracleAddr(address tpOracleAddr)",
    "function setUpgradeConf(uint8 shipType, uint16 shipTypeID, uint16 shipLevel, tuple(uint256 usdPrice, uint32 timeCost, uint16 portIDRequire, uint16 shipyardLvRequire) conf)",
    "function startUpgrade_Ship(uint256 shipNFTID, uint256 usdPrice, string tokenName, uint256 warrantNFTID) payable",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()"
   ]
  },
  "HeroPetTrain": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x46B6E5Ac37A7946f022E197B0bA8Bdd5A57B56e1",
   "abi": [
    "constructor()",
    "event FinishUpStarLv_Hero(address indexed userAddr, uint256 indexed heroNFTID, uint16 newStarLevel)",
    "event FinishUpgrade_HeroOrPet(address indexed userAddr, uint256 indexed heroNFTID, uint16 newLevel)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event StartUpStarLv_Hero(address indexed userAddr, uint256 indexed heroNFTID, uint256 indexed warrantNFTID, uint16 nextStarLevel, uint32 finishTime)",
    "event StartUpgrade_HeroOrPet(address indexed userAddr, uint256 indexed heroNFTID, uint256 indexed warrantNFTID, uint16 nextLevel, uint32 finishTime)",
    "event Unpaused(address account)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function SERVICE_ROLE() view returns (bytes32)",
    "function _MTTGoldAddr() view returns (address)",
    "function _heroNFTAddr() view returns (address)",
    "function _heroStarLvUpConfs(uint8, uint16) view returns (uint256 usdPrice, uint32 timeCost, uint16 heroLevelRequire, uint16 portIDRequire)",
    "function _heropetUpgradeConfs(uint16, uint8, uint16) view returns (uint256 goldPrice, uint32 timeCost, uint16 portIDRequire)",
    "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
    "function _upgradingHeroPets(uint256) view returns (uint16 nextLevel, uint32 finishTime)",
    "function _upingStarLvHeros(uint256) view returns (uint8 nextStarLevel, uint32 finishTime)",
    "function _warrantNFTAddr() view returns (address)",
    "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
    "function clearStarLvUpConf(uint8 job, uint16 level)",
    "function clearUpgradeConf(uint16 nftType, uint8 joborpetid, uint16 level)",
    "function finishUpStarLv_Hero(uint256 heroNFTID)",
    "function finishUpgrade_HeroOrPet(uint256 heroNFTID)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function init(address warrantNFTAddr, address heroNFTAddr, address MTTGoldAddr)",
    "function pause()",
    "function paused() view returns (bool)",
    "function removeChargeToken(string tokenName)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setReceiveIncomeAddr(address incomeAddr)",
    "function setStarLvUpConf(uint8 job, uint16 level, tuple(uint256 usdPrice, uint32 timeCost, uint16 heroLevelRequire, uint16 portIDRequire) conf)",
    "function setTPOracleAddr(address tpOracleAddr)",
    "function setUpgradeConf(uint16 nftType, uint8 joborpetid, uint16 level, tuple(uint256 goldPrice, uint32 timeCost, uint16 portIDRequire) conf)",
    "function startUpStarLv_Hero(uint256 heroNFTID, uint256 usdPrice, string tokenName, uint256 warrantNFTID) payable",
    "function startUpgrade_HeroOrPet(uint256 heroNFTID, uint256 goldPrice, uint256 warrantNFTID)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()"
   ]
  },
  "Expedition": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0xd4ed5714c243B1190398195EB90bB63A4c3D7520",
   "abi": [
    "constructor()",
    "event FetchExpeditionMTT(address indexed userAddr, uint256 value, tuple(uint256 inputGoldLeft, uint256 expedLastFetchBlock, uint256 goldPerBlock, uint256 expedEndBlock) teamData, tuple(uint256 totalHashRate, uint256 totalOutputMTT, uint256 totalInputGold, uint256 currentOutputMTT, uint256 currentInputGold, uint256 currentMTTPerBlock, uint256 lastOutputBlock) poolData)",
    "event OutputMTT(uint256 value, tuple(uint256 totalHashRate, uint256 totalOutputMTT, uint256 totalInputGold, uint256 currentOutputMTT, uint256 currentInputGold, uint256 currentMTTPerBlock, uint256 lastOutputBlock) poolData)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event SetHeroExpedTeam(address indexed userAddr, uint16 indexed portID, uint256 teamHashRate, uint256[] heroNftIDs)",
    "event SetShipExpedTeam(address indexed userAddr, uint16 portID, uint256 teamHashRate, tuple(uint256 shipNFTID, uint256[] heroNFTIDs)[] expedShips)",
    "event StartExpedition(address indexed userAddr, tuple(uint256 inputGoldLeft, uint256 expedLastFetchBlock, uint256 goldPerBlock, uint256 expedEndBlock) teamData, tuple(uint256 totalHashRate, uint256 totalOutputMTT, uint256 totalInputGold, uint256 currentOutputMTT, uint256 currentInputGold, uint256 currentMTTPerBlock, uint256 lastOutputBlock) poolData)",
    "event Unpaused(address account)",
    "event UnsetHeroExpedTeam(address indexed userAddr, uint16 indexed portID, uint256 teamHashRate, uint256[] heroNftIDs)",
    "event UnsetShipExpedTeam(address indexed userAddr, uint16 portID, uint256 teamHashRate, tuple(uint256 shipNFTID, uint256[] heroNFTIDs)[] expedShips)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _MTTAddr() view returns (address)",
    "function _MTTGoldAddr() view returns (address)",
    "function _MTTMinePoolAddr() view returns (address)",
    "function _heroExpeditions(uint16) view returns (tuple(uint256 totalHashRate, uint256 totalOutputMTT, uint256 totalInputGold, uint256 currentOutputMTT, uint256 currentInputGold, uint256 currentMTTPerBlock, uint256 lastOutputBlock) poolData, tuple(uint256 minHashRate, uint256 maxHashRate, uint256 minBlockInterval, uint256 goldPerHashrate, uint256 maxMTTPerGold, uint256 minMTTPerBlock, uint256 maxMTTPerBlock, uint256 maxOutputhashRate) poolConf)",
    "function _heroNFTAddr() view returns (address)",
    "function _shipExpeditions(uint16) view returns (tuple(uint256 totalHashRate, uint256 totalOutputMTT, uint256 totalInputGold, uint256 currentOutputMTT, uint256 currentInputGold, uint256 currentMTTPerBlock, uint256 lastOutputBlock) poolData, tuple(uint256 minHashRate, uint256 maxHashRate, uint256 minBlockInterval, uint256 goldPerHashrate, uint256 maxMTTPerGold, uint256 minMTTPerBlock, uint256 maxMTTPerBlock, uint256 maxOutputhashRate) poolConf)",
    "function _shipNFTAddr() view returns (address)",
    "function _warrantNFTAddr() view returns (address)",
    "function fetchHeroExpedMTT(uint16 portID)",
    "function fetchShipExpedMTT(uint16 portID)",
    "function getHeroExpedData(uint16 portID, address userAddr) view returns (tuple(uint256 teamHashRate, uint256[] heroNFTIDs, tuple(uint256 inputGoldLeft, uint256 expedLastFetchBlock, uint256 goldPerBlock, uint256 expedEndBlock) teamData))",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function getShipExpedData(uint16 portID, address userAddr) view returns (tuple(uint256 teamHashRate, tuple(uint256 shipNFTID, uint256[] heroNFTIDs)[] ships, tuple(uint256 inputGoldLeft, uint256 expedLastFetchBlock, uint256 goldPerBlock, uint256 expedEndBlock) teamData))",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function init(address warrantNFTAddr, address heroNFTAddr, address shipNFTAddr, address MTTAddr, address MTTGoldAddr, address MTTMinePoolAddr)",
    "function onERC721Received(address operator, address from, uint256 tokenId, bytes data) pure returns (bytes4)",
    "function pause()",
    "function paused() view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setHeroExpedTeam(uint16 portID, uint256[] heroNftIDs)",
    "function setPortHeroExpedConf(uint16 portID, tuple(uint256 minHashRate, uint256 maxHashRate, uint256 minBlockInterval, uint256 goldPerHashrate, uint256 maxMTTPerGold, uint256 minMTTPerBlock, uint256 maxMTTPerBlock, uint256 maxOutputhashRate) conf)",
    "function setPortShipExpedConf(uint16 portID, tuple(uint256 minHashRate, uint256 maxHashRate, uint256 minBlockInterval, uint256 goldPerHashrate, uint256 maxMTTPerGold, uint256 minMTTPerBlock, uint256 maxMTTPerBlock, uint256 maxOutputhashRate) conf)",
    "function setShipExpedTeam(uint16 portID, tuple(uint256 shipNFTID, uint256[] heroNFTIDs)[] expedShips)",
    "function startHeroExped(uint16 portID, uint256 inputGold, uint256 blockInterval)",
    "function startShipExped(uint16 portID, uint256 inputGold, uint256 blockInterval)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()",
    "function unsetHeroExpedTeam(uint16 portID)",
    "function unsetShipExpedTeam(uint16 portID)"
   ]
  },
  "MTTMinePool": {
   "deployer": "0x9812752121fb9eBEc49A4B8153240866156E87C5",
   "addr": "0x06dBac8459c0F35089360B785a97CA724E822B3d",
   "abi": [
    "constructor(address _MTTAddr, uint256 _perblock)",
    "event MTTMinePoolSend(address indexed userAddr, address indexed caller, uint256 value, bytes reason)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function _MTT() view returns (address)",
    "function _MTT_LAST_OUTPUT_BLOCK() view returns (uint256)",
    "function _MTT_LIQUIDITY() view returns (uint256)",
    "function _MTT_PER_BLOCK() view returns (uint256)",
    "function _MTT_TOTAL_OUTPUT() view returns (uint256)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function send(address userAddr, uint256 value, bytes reason)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)"
   ]
  }
 }
}