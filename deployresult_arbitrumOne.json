{
 "contracts": {
  "MysteryBox1155": {
   "deployer": "0x9a9D8832534A9DC2efCf99B5f14C8C66F6317027",
   "addr": "0x3ECc587Ef402B5e00a9767d6F9670b463DE2e177",
   "abi": [
    "constructor(string uri)",
    "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
    "event Extendable1155Modify(uint256 indexed id, bytes extendData)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
    "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
    "event URI(string value, uint256 indexed id)",
    "event Unpaused(address account)",
    "function DATA_ROLE() view returns (bytes32)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _royalties() view returns (uint256)",
    "function balanceOf(address account, uint256 id) view returns (uint256)",
    "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
    "function burn(address account, uint256 id, uint256 value)",
    "function burnBatch(address account, uint256[] ids, uint256[] values)",
    "function exists(uint256 id) view returns (bool)",
    "function fetchIncome(address erc20)",
    "function fetchIncomeEth()",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function getTokenExtendNftData(uint256 id) view returns (bytes)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function isApprovedForAll(address account, address operator) view returns (bool)",
    "function mint(address to, uint256 id, uint256 amount, bytes data)",
    "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
    "function modifyExtendData(uint256 id, bytes extendData)",
    "function name() view returns (string)",
    "function pause()",
    "function paused() view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
    "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
    "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function setRoyalties(uint256 royalties)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function totalSupply(uint256 id) view returns (uint256)",
    "function unpause()",
    "function updateURI(string newuri)",
    "function uri(uint256) view returns (string)"
   ]
  },
  "MysteryBoxShop": {
   "deployer": "0x9a9D8832534A9DC2efCf99B5f14C8C66F6317027",
   "addr": "0x64F58293881398B4DBdE2D7afE57b17d7894f83f",
   "abi": [
    "constructor()",
    "event BatchBuyMysteryBox(address indexed userAddr, string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData, uint256 count)",
    "event BuyMysteryBox(address indexed userAddr, string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "event Paused(address account)",
    "event PerAddrBuyCountChange(string indexed pairName, address indexed userAddr, uint32 count)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event SetOnSaleMBCheckCondition(string indexed pairName, uint256 price, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit)",
    "event SetOnSaleMBCountleft(string indexed pairName, uint256 countLeft)",
    "event SetOnSaleMysterBox(string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "event Unpaused(address account)",
    "event UnsetOnSaleMysterBox(string indexed pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function MANAGER_ROLE() view returns (bytes32)",
    "function OPERATER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _onSaleMysterBoxDatas(string) view returns (uint64 nextRenewTime, uint256 countLeft)",
    "function _onSaleMysterBoxes(string) view returns (address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit)",
    "function _perAddrBuyCount(string, address) view returns (uint32)",
    "function _receiveIncomAddress() view returns (address)",
    "function _whitelists(uint32, address) view returns (bool)",
    "function addWitheList(uint32 wlId, address[] whitelist)",
    "function batchBuyMysterBox(string pairName, uint32 count) payable",
    "function buyMysteryBox(string pairName) payable",
    "function fetchIncome(address tokenAddr, uint256 value)",
    "function fetchIncome1155(address tokenAddr, uint256 tokenId, uint256 value)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function pause()",
    "function paused() view returns (bool)",
    "function removeWhiteList(uint32 wlId, address[] whitelist)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function setOnSaleMBCheckCondition(string pairName, uint256 price, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit)",
    "function setOnSaleMBCountleft(string pairName, uint256 countLeft)",
    "function setOnSaleMysteryBox(string pairName, tuple(address mysteryBox1155Addr, uint256 mbTokenId, address tokenAddr, uint256 tokenId, uint256 price, bool isBurn, uint64 beginTime, uint64 endTime, uint64 renewTime, uint256 renewCount, uint32 whitelistId, address nftholderCheck, uint32 perAddrLimit) saleConfig, tuple(uint64 nextRenewTime, uint256 countLeft) saleData)",
    "function setReceiveIncomeAddress(address incomAddr)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function unpause()",
    "function unsetOnSaleMysteryBox(string pairName)"
   ]
  },
  "MTT": {
   "deployer": "0x14285A715A0d0C41Be39C47Df891E998824Bcb0A",
   "addr": "0x575cbea5Ad6356610541211a54253c0ECaF5cD71",
   "abi": [
    "constructor()",
    "event Approval(address indexed owner, address indexed spender, uint256 value)",
    "event Transfer(address indexed from, address indexed to, uint256 value)",
    "function allowance(address owner, address spender) view returns (uint256)",
    "function approve(address spender, uint256 amount) returns (bool)",
    "function balanceOf(address account) view returns (uint256)",
    "function burn(uint256 amount)",
    "function burnFrom(address account, uint256 amount)",
    "function decimals() view returns (uint8)",
    "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
    "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
    "function name() view returns (string)",
    "function symbol() view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function transfer(address to, uint256 amount) returns (bool)",
    "function transferFrom(address from, address to, uint256 amount) returns (bool)"
   ]
  }
 }
}